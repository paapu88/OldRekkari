1) copy positive samples to positive_samples directory
(use ../../picture2matplotlib.py to clip, clipped 80x20 images go to dir 'img')

2) copy negative samples to negative_samples directory
you can generate more negatives by google picture search by
python3 ../../../get_google_images.py
(remember to manually remove positive figures here)

3) find ./negative_images -iname "*.jpg" > negatives.txt
   find ./positive_images/img -iname "*.jpg" > positives.txt
4)
NOT USED:
create distorted positive samples:
perl ../opencv-haar-classifier-training/bin/createsamples.pl  positives.txt negatives.txt samples 300 "opencv_createsamples -maxxangle 0.3 -maxyangle 0.3 -maxzangle 0.5 -maxidev 10 -w 80 -h 20"

check: opencv_createsamples -w 80 -h 20 -vec ./samples/sample_pos4.jpg.vec

5)
NOT USED
merge positive *.vec files to one vec file
python2 ~/Dropbox/Apu/mergevec.py -v samples -o samples.vec
#python2 ../opencv-haar-classifier-training/tools/mergevec.py -v samples -o samples.vec

4) generate vec file of positive samples
USED
cp positives.txt  info.txt
edit info.txt to contain pixel info
> ./positive_images/sample_IMG_20170307_102910.jpg 1 0 0 80 20 
> ...
opencv_createsamples -num 36 -info info.txt -w 80 -h 20 -vec positives.vec

6) train:
rm -f classifier/*
mkdir classifier
opencv_traincascade -data classifier -vec positives.vec -bg negatives.txt\
  -numStages 20 -minHitRate 0.999 -maxFalseAlarmRate 0.5 -numPos 36\
  -numNeg 324 -w 80 -h 20 -mode ALL -precalcValBufSize 512\
  -precalcIdxBufSize 512